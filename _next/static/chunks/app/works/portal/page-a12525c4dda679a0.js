(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[110],{528:function(e,n,o){Promise.resolve().then(o.bind(o,2828))},2828:function(e,n,o){"use strict";o.r(n),o.d(n,{default:function(){return c}});var i=o(3827);o(5594);var t=o(8168),a=o(6376),r=o(3696),l=o(6967),v=o(4797);{let e;let n=new t.XS({width:240});n.close();let o={clearColor:3483431,color1:16711680,color2:255,firefliesCount:30},i=document.querySelector("canvas.webgl"),c=document.getElementById("header"),d=new a.xsS,s=document.querySelector(".loading-bar");console.log(s);let g=new a.lLk(()=>{r.p8.delayedCall(.5,()=>{r.p8.to(x.uniforms.uAlpha,{value:0,duration:4}),s.style.transform="",s.classList.add("ended")})},(e,n,o)=>{s.style.opacity="1",s.style.transform="scaleX(".concat(n/o,")")}),u=new a.dpR(g),m=new v.E(g),f=new a._12(2,2,1,1),x=new a.jyz({transparent:!0,depthWrite:!1,uniforms:{uAlpha:{value:1}},vertexShader:"\n    void main() {\n        gl_Position = vec4(position, 1.0);\n    }",fragmentShader:"\n    uniform float uAlpha;\n\n    void main() {\n        gl_FragColor = vec4(0.0, 0.0, 0.0, uAlpha);\n    }\n    "}),y=new a.Kj0(f,x);d.add(y);let P=u.load("/assets/works/portal/textures/baked.jpg");P.flipY=!1,P.encoding=a.knz;let w=new a.vBJ({map:P}),z=new a.vBJ({color:16777189}),h=new a.jyz({uniforms:{uPixelRatio:{value:Math.min(window.devicePixelRatio,2)},uTime:{value:0},uAlpha:{value:0},uColor1:{value:new a.Ilk(806868)},uColor2:{value:new a.Ilk(13683907)},uMode:{value:1}},vertexShader:"#define GLSLIFY 1\nvarying vec2 vUv;\n\nvoid main() {\n    vec4 modelPosition = modelMatrix * vec4(position, 1.0);\n    vec4 viewPosition = viewMatrix * modelPosition;\n    vec4 projectionPosition = projectionMatrix * viewPosition;\n\n    gl_Position = projectionPosition;\n    \n    vUv = uv;\n}",fragmentShader:"#define GLSLIFY 1\nvarying vec2 vUv;\nuniform float uTime;\nuniform vec3 uColor1;\nuniform vec3 uColor2;\nuniform float uMode;\n\n// by Stefan Gustavson\n//\nvec4 permute(vec4 x)\n{\n    return mod(((x*34.0)+1.0)*x, 289.0);\n}\nvec4 taylorInvSqrt(vec4 r)\n{\n    return 1.79284291400159 - 0.85373472095314 * r;\n}\nvec3 fade(vec3 t)\n{\n    return t*t*t*(t*(t*6.0-15.0)+10.0);\n}\n\nfloat cnoise(vec3 P)\n{\n    vec3 Pi0 = floor(P); // Integer part for indexing\n    vec3 Pi1 = Pi0 + vec3(1.0); // Integer part + 1\n    Pi0 = mod(Pi0, 289.0);\n    Pi1 = mod(Pi1, 289.0);\n    vec3 Pf0 = fract(P); // Fractional part for interpolation\n    vec3 Pf1 = Pf0 - vec3(1.0); // Fractional part - 1.0\n    vec4 ix = vec4(Pi0.x, Pi1.x, Pi0.x, Pi1.x);\n    vec4 iy = vec4(Pi0.yy, Pi1.yy);\n    vec4 iz0 = Pi0.zzzz;\n    vec4 iz1 = Pi1.zzzz;\n\n    vec4 ixy = permute(permute(ix) + iy);\n    vec4 ixy0 = permute(ixy + iz0);\n    vec4 ixy1 = permute(ixy + iz1);\n\n    vec4 gx0 = ixy0 / 7.0;\n    vec4 gy0 = fract(floor(gx0) / 7.0) - 0.5;\n    gx0 = fract(gx0);\n    vec4 gz0 = vec4(0.5) - abs(gx0) - abs(gy0);\n    vec4 sz0 = step(gz0, vec4(0.0));\n    gx0 -= sz0 * (step(0.0, gx0) - 0.5);\n    gy0 -= sz0 * (step(0.0, gy0) - 0.5);\n\n    vec4 gx1 = ixy1 / 7.0;\n    vec4 gy1 = fract(floor(gx1) / 7.0) - 0.5;\n    gx1 = fract(gx1);\n    vec4 gz1 = vec4(0.5) - abs(gx1) - abs(gy1);\n    vec4 sz1 = step(gz1, vec4(0.0));\n    gx1 -= sz1 * (step(0.0, gx1) - 0.5);\n    gy1 -= sz1 * (step(0.0, gy1) - 0.5);\n\n    vec3 g000 = vec3(gx0.x,gy0.x,gz0.x);\n    vec3 g100 = vec3(gx0.y,gy0.y,gz0.y);\n    vec3 g010 = vec3(gx0.z,gy0.z,gz0.z);\n    vec3 g110 = vec3(gx0.w,gy0.w,gz0.w);\n    vec3 g001 = vec3(gx1.x,gy1.x,gz1.x);\n    vec3 g101 = vec3(gx1.y,gy1.y,gz1.y);\n    vec3 g011 = vec3(gx1.z,gy1.z,gz1.z);\n    vec3 g111 = vec3(gx1.w,gy1.w,gz1.w);\n\n    vec4 norm0 = taylorInvSqrt(vec4(dot(g000, g000), dot(g010, g010), dot(g100, g100), dot(g110, g110)));\n    g000 *= norm0.x;\n    g010 *= norm0.y;\n    g100 *= norm0.z;\n    g110 *= norm0.w;\n    vec4 norm1 = taylorInvSqrt(vec4(dot(g001, g001), dot(g011, g011), dot(g101, g101), dot(g111, g111)));\n    g001 *= norm1.x;\n    g011 *= norm1.y;\n    g101 *= norm1.z;\n    g111 *= norm1.w;\n\n    float n000 = dot(g000, Pf0);\n    float n100 = dot(g100, vec3(Pf1.x, Pf0.yz));\n    float n010 = dot(g010, vec3(Pf0.x, Pf1.y, Pf0.z));\n    float n110 = dot(g110, vec3(Pf1.xy, Pf0.z));\n    float n001 = dot(g001, vec3(Pf0.xy, Pf1.z));\n    float n101 = dot(g101, vec3(Pf1.x, Pf0.y, Pf1.z));\n    float n011 = dot(g011, vec3(Pf0.x, Pf1.yz));\n    float n111 = dot(g111, Pf1);\n\n    vec3 fade_xyz = fade(Pf0);\n    vec4 n_z = mix(vec4(n000, n100, n010, n110), vec4(n001, n101, n011, n111), fade_xyz.z);\n    vec2 n_yz = mix(n_z.xy, n_z.zw, fade_xyz.y);\n    float n_xyz = mix(n_yz.x, n_yz.y, fade_xyz.x); \n    return 2.2 * n_xyz;\n}\n\nvoid main() {\n    vec2 displacedUv = vUv + cnoise(vec3(vUv * 4.0, uTime / 5.0));\n\n    float strength = cnoise(vec3(displacedUv * 4.0, uTime / 5.0));\n\n    float outerGlow = distance(vUv, vec2(0.5)) * 3.0 - 0.5;\n\n    strength += outerGlow;\n\n    strength = strength + step(-0.2, strength);\n\n    float ratio = 0.0;\n    if (uMode == 1.0) {\n        ratio = (vUv.x + vUv.y) / 2.0;\n    } else if (uMode == 2.0) {\n        ratio = distance(vUv, vec2(0.5)) / 0.5;\n    }\n\n    vec3 gradColor = mix(uColor1, uColor2, ratio);\n\n    vec3 color = mix(vec3(0.0), gradColor, strength);\n\n    gl_FragColor = vec4(color, 1.0);\n}",side:a.ehD});n.addColor(h.uniforms.uColor2,"value").name("color1"),n.addColor(h.uniforms.uColor1,"value").name("color2"),n.add(h.uniforms.uMode,"value").name("gradient pattern").options({linear:1,radial:2}),m.load("/assets/works/portal/models/model.glb",e=>{let n=e.scene.children.find(e=>"baked"===e.name),o=e.scene.children.find(e=>"portal"===e.name),i=e.scene.children.find(e=>"polelightR"===e.name),t=e.scene.children.find(e=>"polelightL"===e.name);n.material=w,o.material=h,i.material=z,t.material=z,d.add(e.scene)});let p=new a.jyz({transparent:!0,uniforms:{uPixelRatio:{value:Math.min(window.devicePixelRatio,2)},uSize:{value:120},uTime:{value:0},uColor:{value:new a.Ilk(16777215)}},vertexShader:"#define GLSLIFY 1\nuniform float uPixelRatio;\nuniform float uSize;\nuniform float uTime;\nattribute float aScale;\n\nvarying vec2 vUv;\nvarying float vRam;\n\nfloat random(vec2 st)\n{\n    return fract(sin(dot(st.xy, vec2(12.9898,78.233))) * 43758.5453123);\n}\n\nvoid main() {\n    vec4 modelPosition = modelMatrix * vec4(position, 1.0);\n    modelPosition.y += sin(modelPosition.x * 100.0 + uTime * 1.1) * 0.2 * aScale;\n    modelPosition.x += sin(modelPosition.x * 100.0 + uTime * 0.5) * 0.2 * aScale * 2.2;\n    modelPosition.z += sin(modelPosition.x * 2.0 + uTime * 0.1) * 0.2 * aScale * 0.4;\n\n    vec4 viewPosition = viewMatrix * modelPosition;\n    vec4 projectionPosition = projectionMatrix * viewPosition;\n\n    float ram = clamp(sin(uTime * 3.0 / 10.0) * cos(uTime * 5.0 - 3.141592 / 6.0), 1.0, 3.0);\n\n    gl_Position = projectionPosition;\n    gl_PointSize = uSize * aScale * uPixelRatio * ram;\n    gl_PointSize *= (1.0 / -viewPosition.z);\n\n    vUv = uv;\n    vRam = ram;\n}",fragmentShader:"#define GLSLIFY 1\nvarying vec2 vUv;\nvarying float vRam;\nuniform float uTime;\nuniform vec3 uColor;\n\nvoid main() {\n    float strength = 0.05 / distance(gl_PointCoord, vec2(0.5)) - 0.05 * 2.0;\n    strength *= vRam;\n    \n    gl_FragColor = vec4(uColor, strength);\n}",blending:a.WMw,depthWrite:!1}),C=()=>{e&&d.remove(e);let n=new a.u9r,i=new Float32Array(3*o.firefliesCount),t=new Float32Array(o.firefliesCount);for(let e=0;e<o.firefliesCount;e++)i[3*e+0]=(Math.random()-.5)*3.5,i[3*e+1]=1.5*Math.random(),i[3*e+2]=(Math.random()-.5)*3.5,t[e]=.6*Math.random()+.4;n.setAttribute("position",new a.TlE(i,3)),n.setAttribute("aScale",new a.TlE(t,1)),e=new a.woe(n,p),d.add(e)};C(),n.add(p.uniforms.uSize,"value").name("firefliesSize").min(30).max(500).step(.01),n.add(o,"firefliesCount").name("firefliesCount").min(0).max(100).step(1).onFinishChange(C),n.addColor(p.uniforms.uColor,"value").name("firefliesColor");let S={width:window.innerWidth,height:window.innerHeight-c.clientHeight};window.addEventListener("resize",()=>{S.width=window.innerWidth,S.height=window.innerHeight-c.clientHeight,_.aspect=S.width/S.height,_.updateProjectionMatrix(),b.setSize(S.width,S.height),b.setPixelRatio(Math.min(window.devicePixelRatio,2)),p.uniforms.uPixelRatio.value=Math.min(window.devicePixelRatio,2)});let _=new a.cPb(45,S.width/S.height,.1,100);_.position.x=4,_.position.y=2,_.position.z=4,d.add(_);let M=new l.z(_,i);M.enableDamping=!0,M.maxDistance=20,M.maxPolarAngle=Math.PI/2;let b=new a.CP7({canvas:i,antialias:!0});b.setSize(S.width,S.height),b.setPixelRatio(Math.min(window.devicePixelRatio,2)),b.outputEncoding=a.knz,b.setClearColor(o.clearColor),n.addColor(o,"clearColor").onChange(()=>{b.setClearColor(o.clearColor)}).name("background");let R=new a.SUY,T=()=>{let e=R.getElapsedTime();p.uniforms.uTime.value=e,h.uniforms.uTime.value=e,M.update(),b.render(d,_),window.requestAnimationFrame(T)};T()}function c(){return(0,i.jsxs)("div",{className:"fixed left-0",style:{top:90},children:[(0,i.jsx)("canvas",{className:"webgl"}),(0,i.jsx)("div",{className:"loading-bar"})]})}},5594:function(){}},function(e){e.O(0,[689,922,64,967,971,69,744],function(){return e(e.s=528)}),_N_E=e.O()}]);